{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 3332,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 532,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nCMake\n-----\n\n  Thanks for installing. This package provides:\n\n  - Syntax highlighting for .cmake and CMakeLists.txt files\n  - CMakeCache.txt syntax highlighting\n  - CMake \"config\" header syntax (*.h.in and *.hpp.in files)\n  - Various static completions for built-in cmake functions\n\nCMakeBuilder\n------------\n\n  +--++++====++++----------------------------------------------++++====++++--+\n\n                       Thanks for trying CMakeBuilder!\n                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n  The CMakeBuilder package is located at\n\n      (Installed) Packages/CMakeBuilder\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  This message is the installation message. It can be found at\n\n      (Installed) Packages/CMakeBuilder/messages/install.txt\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  This plugin is very simple and can be seen as \"glue\" between the CMake build\n  system and Sublime Text's own build system. It gives you a few useful\n  utility commands so that you don't have to leave Sublime Text, for most of \n  the time. To help CMakeBuilder know where your CMake build folder is, you'll\n  have to have a .sublime-project file with a \"cmake\" dictionary sitting next \n  to \"settings\", \"folders\", and so forth.\n\n  For the \"Instruction Manual\", please see:\n\n      https://github.com/rwols/CMakeBuilder\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  Or, you can even just go to\n\n      Preferences -> Package Settings -> CMakeBuilder -> README\n\n  Extra goodies:\n  - Goto error/warning at the configuration step (press F4)\n  - Goto error/warning at the build step (press F4)\n  - Run your unit tests from within Sublime with CTest\n  - Diagnose command if you get stuck on what to do\n  - Syntax highlighting for the CMakeCache.txt file\n  - Syntax highlighting for the cmake output panel at the configuration step\n  - Syntax highlighting for both Make- and Ninja-based build systems\n  - Syntax highlighting for Visual Studio / MSBuild-style outputs\n\n  Note that commands are \"disabled\" when they feel that they cannot be run.\n  For example, if there is no CMakeLists.txt file in your project folder, the\n  command \"CMakeBuilder: Configure\" will not show up in the command palette.\n  The command \"CMakeBuilder: Diagnose\" can always be run and you can use that\n  as a hint as to what is wrong.\n\n  This plugin is not a replacement for \"serious\" build users. In a real build,\n  you probably want to create shared and static versions of your library, and\n  debug and release versions. Perhaps 32 bit and 64 bit too. That's what the\n  command line is for. This plugin is for the developer working on a CMake \n  project and wanting to quickly build/test the project.\n\n  This plugin does not provide syntax highlighting for CMakeLists.txt files \n  and .cmake files, nor does it provide highlighting for \".in\" files suitable\n  for \"configure_file\" commands from CMake; download the \"CMake\" package to\n  that end.\n  +--++++====++++----------------------------------------------++++====++++--+",
			"settings":
			{
				"buffer_size": 3056,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "Package Control Messages\n========================\n\nCMake\n-----\n\n  Thanks for installing. This package provides:\n\n  - Syntax highlighting for .cmake and CMakeLists.txt files\n  - CMakeCache.txt syntax highlighting\n  - CMake \"config\" header syntax (*.h.in and *.hpp.in files)\n  - Various static completions for built-in cmake functions"
					},
					"FAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD8AAAAAAAAAAAAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAK0AAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAABMAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": "\n\nCMakeBuilder\n------------\n\n  +--++++====++++----------------------------------------------++++====++++--+\n\n                       Thanks for trying CMakeBuilder!\n                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n  The CMakeBuilder package is located at\n\n      (Installed) Packages/CMakeBuilder\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  This message is the installation message. It can be found at\n\n      (Installed) Packages/CMakeBuilder/messages/install.txt\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  This plugin is very simple and can be seen as \"glue\" between the CMake build\n  system and Sublime Text's own build system. It gives you a few useful\n  utility commands so that you don't have to leave Sublime Text, for most of \n  the time. To help CMakeBuilder know where your CMake build folder is, you'll\n  have to have a .sublime-project file with a \"cmake\" dictionary sitting next \n  to \"settings\", \"folders\", and so forth.\n\n  For the \"Instruction Manual\", please see:\n\n      https://github.com/rwols/CMakeBuilder\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  Or, you can even just go to\n\n      Preferences -> Package Settings -> CMakeBuilder -> README\n\n  Extra goodies:\n  - Goto error/warning at the configuration step (press F4)\n  - Goto error/warning at the build step (press F4)\n  - Run your unit tests from within Sublime with CTest\n  - Diagnose command if you get stuck on what to do\n  - Syntax highlighting for the CMakeCache.txt file\n  - Syntax highlighting for the cmake output panel at the configuration step\n  - Syntax highlighting for both Make- and Ninja-based build systems\n  - Syntax highlighting for Visual Studio / MSBuild-style outputs\n\n  Note that commands are \"disabled\" when they feel that they cannot be run.\n  For example, if there is no CMakeLists.txt file in your project folder, the\n  command \"CMakeBuilder: Configure\" will not show up in the command palette.\n  The command \"CMakeBuilder: Diagnose\" can always be run and you can use that\n  as a hint as to what is wrong.\n\n  This plugin is not a replacement for \"serious\" build users. In a real build,\n  you probably want to create shared and static versions of your library, and\n  debug and release versions. Perhaps 32 bit and 64 bit too. That's what the\n  command line is for. This plugin is for the developer working on a CMake \n  project and wanting to quickly build/test the project.\n\n  This plugin does not provide syntax highlighting for CMakeLists.txt files \n  and .cmake files, nor does it provide highlighting for \".in\" files suitable\n  for \"configure_file\" commands from CMake; download the \"CMake\" package to\n  that end.\n  +--++++====++++----------------------------------------------++++====++++--+"
					},
					"bQAAAEwBAAAAAAAATQEAAAAAAAAAAAAATQEAAAAAAABOAQAAAAAAAAAAAABOAQAAAAAAAFoBAAAAAAAAAAAAAFoBAAAAAAAAWwEAAAAAAAAAAAAAWwEAAAAAAABnAQAAAAAAAAAAAABnAQAAAAAAAGgBAAAAAAAAAAAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAAC3AQAAAAAAAAAAAAC3AQAAAAAAALgBAAAAAAAAAAAAALgBAAAAAAAAuQEAAAAAAAAAAAAAuQEAAAAAAADvAQAAAAAAAAAAAADvAQAAAAAAAPABAAAAAAAAAAAAAPABAAAAAAAAJgIAAAAAAAAAAAAAJgIAAAAAAAAnAgAAAAAAAAAAAAAnAgAAAAAAACgCAAAAAAAAAAAAACgCAAAAAAAAKQIAAAAAAAAAAAAAKQIAAAAAAABRAgAAAAAAAAAAAABRAgAAAAAAAFICAAAAAAAAAAAAAFICAAAAAAAAUwIAAAAAAAAAAAAAUwIAAAAAAAB6AgAAAAAAAAAAAAB6AgAAAAAAAHsCAAAAAAAAAAAAAHsCAAAAAAAAogIAAAAAAAAAAAAAogIAAAAAAACjAgAAAAAAAAAAAACjAgAAAAAAAKQCAAAAAAAAAAAAAKQCAAAAAAAA4gIAAAAAAAAAAAAA4gIAAAAAAADjAgAAAAAAAAAAAADjAgAAAAAAAOQCAAAAAAAAAAAAAOQCAAAAAAAAIAMAAAAAAAAAAAAAIAMAAAAAAAAhAwAAAAAAAAAAAAAhAwAAAAAAAF0DAAAAAAAAAAAAAF0DAAAAAAAAXgMAAAAAAAAAAAAAXgMAAAAAAABfAwAAAAAAAAAAAABfAwAAAAAAAK0DAAAAAAAAAAAAAK0DAAAAAAAArgMAAAAAAAAAAAAArgMAAAAAAAD1AwAAAAAAAAAAAAD1AwAAAAAAAPYDAAAAAAAAAAAAAPYDAAAAAAAAQwQAAAAAAAAAAAAAQwQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAJIEAAAAAAAAAAAAAJIEAAAAAAAAkwQAAAAAAAAAAAAAkwQAAAAAAADhBAAAAAAAAAAAAADhBAAAAAAAAOIEAAAAAAAAAAAAAOIEAAAAAAAACwUAAAAAAAAAAAAACwUAAAAAAAAMBQAAAAAAAAAAAAAMBQAAAAAAAA0FAAAAAAAAAAAAAA0FAAAAAAAAOAUAAAAAAAAAAAAAOAUAAAAAAAA5BQAAAAAAAAAAAAA5BQAAAAAAADoFAAAAAAAAAAAAADoFAAAAAAAAZQUAAAAAAAAAAAAAZQUAAAAAAABmBQAAAAAAAAAAAABmBQAAAAAAAJEFAAAAAAAAAAAAAJEFAAAAAAAAkgUAAAAAAAAAAAAAkgUAAAAAAACTBQAAAAAAAAAAAACTBQAAAAAAALAFAAAAAAAAAAAAALAFAAAAAAAAsQUAAAAAAAAAAAAAsQUAAAAAAACyBQAAAAAAAAAAAACyBQAAAAAAAPEFAAAAAAAAAAAAAPEFAAAAAAAA8gUAAAAAAAAAAAAA8gUAAAAAAADzBQAAAAAAAAAAAADzBQAAAAAAAAMGAAAAAAAAAAAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAEAGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAB0BgAAAAAAAKoGAAAAAAAAAAAAAKoGAAAAAAAAqwYAAAAAAAAAAAAAqwYAAAAAAADeBgAAAAAAAAAAAADeBgAAAAAAAN8GAAAAAAAAAAAAAN8GAAAAAAAAEgcAAAAAAAAAAAAAEgcAAAAAAAATBwAAAAAAAAAAAAATBwAAAAAAAF8HAAAAAAAAAAAAAF8HAAAAAAAAYAcAAAAAAAAAAAAAYAcAAAAAAACkBwAAAAAAAAAAAACkBwAAAAAAAKUHAAAAAAAAAAAAAKUHAAAAAAAA5gcAAAAAAAAAAAAA5gcAAAAAAADnBwAAAAAAAAAAAADnBwAAAAAAAOgHAAAAAAAAAAAAAOgHAAAAAAAAMwgAAAAAAAAAAAAAMwgAAAAAAAA0CAAAAAAAAAAAAAA0CAAAAAAAAIEIAAAAAAAAAAAAAIEIAAAAAAAAgggAAAAAAAAAAAAAgggAAAAAAADOCAAAAAAAAAAAAADOCAAAAAAAAM8IAAAAAAAAAAAAAM8IAAAAAAAAHAkAAAAAAAAAAAAAHAkAAAAAAAAdCQAAAAAAAAAAAAAdCQAAAAAAAD0JAAAAAAAAAAAAAD0JAAAAAAAAPgkAAAAAAAAAAAAAPgkAAAAAAAA/CQAAAAAAAAAAAAA/CQAAAAAAAI0JAAAAAAAAAAAAAI0JAAAAAAAAjgkAAAAAAAAAAAAAjgkAAAAAAADbCQAAAAAAAAAAAADbCQAAAAAAANwJAAAAAAAAAAAAANwJAAAAAAAAKAoAAAAAAAAAAAAAKAoAAAAAAAApCgAAAAAAAAAAAAApCgAAAAAAAHQKAAAAAAAAAAAAAHQKAAAAAAAAdQoAAAAAAAAAAAAAdQoAAAAAAACtCgAAAAAAAAAAAACtCgAAAAAAAK4KAAAAAAAAAAAAAK4KAAAAAAAArwoAAAAAAAAAAAAArwoAAAAAAAD7CgAAAAAAAAAAAAD7CgAAAAAAAPwKAAAAAAAAAAAAAPwKAAAAAAAASQsAAAAAAAAAAAAASQsAAAAAAABKCwAAAAAAAAAAAABKCwAAAAAAAJULAAAAAAAAAAAAAJULAAAAAAAAlgsAAAAAAAAAAAAAlgsAAAAAAAChCwAAAAAAAAAAAAChCwAAAAAAAKILAAAAAAAAAAAAAKILAAAAAAAA8AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3332,
						"regions":
						{
						},
						"selection":
						[
							[
								188,
								188
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 532,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3056,
						"regions":
						{
						},
						"selection":
						[
							[
								3056,
								3056
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "nyx.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
